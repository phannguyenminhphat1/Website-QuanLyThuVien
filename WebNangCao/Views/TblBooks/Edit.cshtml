@model WebNangCao.Models.tblBook

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<!DOCTYPE html>
<html>
<head>
    <script src="https://cdn.tiny.cloud/1/9gsobw8lm9nssim28suaswj1vl9prknyzgd8vpweb989n931/tinymce/5/tinymce.min.js" referrerpolicy="origin"></script>
    <script>
        tinymce.init({
            selector: '.boxx',
            plugins: 'a11ychecker advcode casechange formatpainter linkchecker autolink lists checklist media mediaembed pageembed permanentpen powerpaste table advtable tinycomments tinymcespellchecker',
            toolbar: 'a11ycheck addcomment showcomments casechange checklist code formatpainter pageembed permanentpen table',
            toolbar_mode: 'floating',
            tinycomments_mode: 'embedded',
            tinycomments_author: 'Author name',
        });
    </script>
    <style>
        label{
            font-weight:bold;
            font-size:1.1rem;
        }
    </style>
    
</head>
<body>
@using (Html.BeginForm("Edit","TblBooks",FormMethod.Post, new { @enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <br />
    <h4>Cập nhật sách</h4>
    <hr />
    <div class="col-6 offset-3 card">
        <br />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.BookId)
        <div class="form-row form-group">
            <div class="col">
                @Html.LabelFor(model => model.BookTitle, htmlAttributes: new { @class = "control-label" })

                @Html.EditorFor(model => model.BookTitle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BookTitle, "", new { @class = "text-danger" })

            </div>

            <div class="col">
                @Html.LabelFor(model => model.BookCategory, htmlAttributes: new { @class = "control-label" })

                @Html.DropDownListFor(model => model.BookCategory, new List<SelectListItem> {
                new SelectListItem{ Text="Kỹ năng sống", Value="Kỹ năng sống"},
                 new SelectListItem{ Text="Kinh doanh", Value="Kinh doanh"},
                new SelectListItem{ Text="Cách mạng công nghiệp", Value="Cách mạng công nghiệp"},
                new SelectListItem{ Text="Cuộc sống", Value="Cuộc sống"},
                new SelectListItem{ Text="Viễn tưởng", Value="Viễn tưởng"},
                new SelectListItem{ Text="Khoa học", Value="Khoa học"},
                new SelectListItem{ Text="Tiểu thuyết", Value="Tiểu thuyết"},
               }, "Chọn loại", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.BookCategory, "", new { @class = "text-danger" })

            </div>
        </div>
        <div class="form-row form-group">
            <div class="col">
                @Html.LabelFor(model => model.BookAuthor, htmlAttributes: new { @class = "control-label" })

                @Html.EditorFor(model => model.BookAuthor, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BookAuthor, "", new { @class = "text-danger" })

            </div>

            <div class="col">
                @Html.LabelFor(model => model.BookCopies, htmlAttributes: new { @class = "control-label" })

                @Html.EditorFor(model => model.BookCopies, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BookCopies, "", new { @class = "text-danger" })

            </div>
        </div>
        <div class="form-row form-group">

            <div class="col">
                @Html.LabelFor(model => model.Copyright, htmlAttributes: new { @class = "control-label" })

                @Html.EditorFor(model => model.Copyright, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Copyright, "", new { @class = "text-danger" })

            </div>
            <div class="col">
                @Html.LabelFor(model => model.DateAdded, htmlAttributes: new { @class = "control-label" })

                @Html.EditorFor(model => model.DateAdded, new { htmlAttributes = new { @class = "form-control datepicker" } })
                @Html.ValidationMessageFor(model => model.DateAdded, "", new { @class = "text-danger" })

            </div>
        </div>
        <div class="form-row form-group">


            <div class="col">
                @Html.LabelFor(model => model.Statuss, htmlAttributes: new { @class = "control-label" })

                @Html.DropDownListFor(model => model.Statuss, new List<SelectListItem> {
                new SelectListItem{ Text="Mới", Value="Mới"},
                new SelectListItem{ Text="Cũ", Value="Cũ"},
                new SelectListItem{ Text="Hỏng", Value="Hỏng"}
                }, "Select status", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Statuss, "", new { @class = "text-danger" })

            </div>
            <div class="col">
                @Html.LabelFor(model => model.Descrip, htmlAttributes: new { @class = "control-label" })
                <textarea name="Descrip" style="display:block;width:100%">@Model.Descrip</textarea>
                @Html.ValidationMessageFor(model => model.Descrip, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-row form-group">
            <div class="col">
                @Html.LabelFor(model => model.Detail, htmlAttributes: new { @class = "control-label" })
                <textarea class="boxx" name="Detail">@Model.Detail</textarea>
                @Html.ValidationMessageFor(model => model.Detail, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-row form-group">
            <div class="col">
                @Html.LabelFor(model => model.Images1, htmlAttributes: new { @class = "control-label" })
                <textarea class="boxx" name="Images1">@Model.Images1</textarea>
            </div>
        </div>
        <div class="form-row form-group">
            <div class="col">
                @Html.LabelFor(model => model.Images2, htmlAttributes: new { @class = "control-label" })
                <textarea class="boxx" name="Images2">@Model.Images2</textarea>

            </div>
        </div>
        <div class="form-row form-group">
            <div class="col">
                @Html.LabelFor(model => model.Images3, htmlAttributes: new { @class = "control-label" })
                <textarea class="boxx" name="Images3">@Model.Images3</textarea>

            </div>
        </div>
        <div class="form-row form-group">
            <div class="col">
                @Html.LabelFor(model => model.Images, htmlAttributes: new { @class = "control-label" })

                <img src="@Url.Content("/Content/Images/"+Session["imgPath"].ToString())" width="100" height="70" />

                <input name="Images" type="file" style="display:block" />
                <span class="field-validation-error text-danger">
                    @ViewBag.upload
                </span>
                <br />

            </div>
        </div>
        <div class="form-group">
            <button onclick="" type="submit" value="Update" class="btn btn-primary btn-sm" data-toggle='tooltip' title='Update book'>
                <i class="fas fa-check-circle"></i>
                Cập nhật
            </button>
        </div>
    </div>
    <br />
}

<div class="btn btn-sm btn-secondary" data-toggle='tooltip' title='Back to book list'>
    <i class="fas fa-long-arrow-alt-left"></i>
    @Html.ActionLink("Back", "Index", null, new { @class = "", style = "text-decoration:none; color: white" })
</div>
<br />
<br />

@*External scripts for date picker plugins*@
<link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />
@section scripts{
    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>

    <script>
        @*Date picker plugin*@
        $(function () {
            $(".datepicker").datepicker({ changeMonth: true, changeYear: true });
        });
        @*Scripts for update alert*@
        function updateMessage() {
            alert("Book updated successfully")
        }
    </script>
}

</body>
</html>